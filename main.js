(()=>{"use strict";var n={497:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),A=r(645),a=r.n(A)()(o());a.push([n.id,"#header {\n  display: flex;\n  justify-content: left;\n  padding-left: 30px;\n  color: white;\n  align-items: center;\n  grid-area: 1 / 1 / 2 / 3;\n  background-color: var(--header);\n\n}\n\n#header h1 {\n  font-size: 50px;\n}\n","",{version:3,sources:["webpack://./src/styles/header.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,qBAAqB;EACrB,kBAAkB;EAClB,YAAY;EACZ,mBAAmB;EACnB,wBAAwB;EACxB,+BAA+B;;AAEjC;;AAEA;EACE,eAAe;AACjB",sourcesContent:["#header {\n  display: flex;\n  justify-content: left;\n  padding-left: 30px;\n  color: white;\n  align-items: center;\n  grid-area: 1 / 1 / 2 / 3;\n  background-color: var(--header);\n\n}\n\n#header h1 {\n  font-size: 50px;\n}\n"],sourceRoot:""}]);const i=a},756:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),A=r(645),a=r.n(A)()(o());a.push([n.id,"#main {\n  grid-area: 2 / 2 / 3 / 3;\n}\n\n#project-title {\n  display: flex;\n  flex-direction: column;\n  padding: 15px 30px;\n  height: max-content;\n  row-gap: 7px;\n}\n\n#project-title h1 {\n  font-size: 50px;\n  text-align: center;\n  padding-bottom: 10px;\n}\n\n.task-div {\n  border: 1px solid var(--green);\n  padding: 12px 20px;\n  margin: 10px 100px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  border-radius: 10px;\n}\n\n.high-urg {\n  border-left: 8px solid red;\n}\n\n.medium-urg {\n  border-left: 8px solid rgb(230, 230, 9);\n}\n\n.low-urg {\n  border-left: 8px solid green;\n}\n\n.btn {\n  cursor: pointer;\n}\n\n.task-name {\n  display: flex;\n  column-gap: 10px;\n}\n\n.due-date,\n.priority {\n  justify-self: center;\n}\n\n.task-actions {\n  display: flex;\n  justify-self: right;\n  column-gap: 20px;\n}\n\n.task-actions > i {\n  cursor: pointer;\n}\n\n.new-task {\n  margin: 10px 100px;\n  font-size: 30px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: var(--header);\n  color: white;\n  transition: all 0.2s ease-in-out;\n}\n\n.new-task:hover {\n  background-color: var(--sidebar);\n  color: var(--header);\n  transform: rotate(360deg);\n}\n","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,8BAA8B;EAC9B,kBAAkB;EAClB,kBAAkB;EAClB,aAAa;EACb,qCAAqC;EACrC,mBAAmB;AACrB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;;EAEE,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,+BAA+B;EAC/B,YAAY;EACZ,gCAAgC;AAClC;;AAEA;EACE,gCAAgC;EAChC,oBAAoB;EACpB,yBAAyB;AAC3B",sourcesContent:["#main {\n  grid-area: 2 / 2 / 3 / 3;\n}\n\n#project-title {\n  display: flex;\n  flex-direction: column;\n  padding: 15px 30px;\n  height: max-content;\n  row-gap: 7px;\n}\n\n#project-title h1 {\n  font-size: 50px;\n  text-align: center;\n  padding-bottom: 10px;\n}\n\n.task-div {\n  border: 1px solid var(--green);\n  padding: 12px 20px;\n  margin: 10px 100px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  border-radius: 10px;\n}\n\n.high-urg {\n  border-left: 8px solid red;\n}\n\n.medium-urg {\n  border-left: 8px solid rgb(230, 230, 9);\n}\n\n.low-urg {\n  border-left: 8px solid green;\n}\n\n.btn {\n  cursor: pointer;\n}\n\n.task-name {\n  display: flex;\n  column-gap: 10px;\n}\n\n.due-date,\n.priority {\n  justify-self: center;\n}\n\n.task-actions {\n  display: flex;\n  justify-self: right;\n  column-gap: 20px;\n}\n\n.task-actions > i {\n  cursor: pointer;\n}\n\n.new-task {\n  margin: 10px 100px;\n  font-size: 30px;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: var(--header);\n  color: white;\n  transition: all 0.2s ease-in-out;\n}\n\n.new-task:hover {\n  background-color: var(--sidebar);\n  color: var(--header);\n  transform: rotate(360deg);\n}\n"],sourceRoot:""}]);const i=a},584:(n,e,r)=>{r.d(e,{Z:()=>i});var t=r(537),o=r.n(t),A=r(645),a=r.n(A)()(o());a.push([n.id,"#side-bar {\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0;\n  row-gap: 8px;\n  grid-area: 2 / 1 / 3 / 2;\n  background-color: var(--sidebar);\n  overflow: hidden;\n}\n\n#side-bar h1 {\n  margin: 10px 0;\n  text-align: center;\n  font-size: 40px;\n}\n\n#side-bar h2,\n#side-bar h3 {\n  font-size: 20px;\n  margin: 10px 0 0 35px;\n  cursor: pointer;\n  width: max-content;\n  border-bottom: 2px solid transparent;\n}\n\n#side-bar h2::before{\n  content: '';\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  align-items: center;\n  border-radius: 7.5px;\n  margin: 0 8px 1.55px 0;\n  background-color: var(--text-color);\n}\n\n#side-bar h3:hover,\n#side-bar h2:hover {\n  border-bottom: 2px solid var(--header);\n}\n\n#side-bar h3:hover {\n  color: var(--header);\n}\n\n.new-project {\n  font-size: 15px;\n  margin-right: 4px;\n}\n\n/* Form */\n\nform {\n  margin: 10px 0 0 35px;\n  width: max-content;\n}\n\nform input[type=text] {\n  font-family: 'Roboto', 'serif';\n  font-size: 20px;\n  font-weight: bold;\n  height: 30px;\n  width: 220px;\n  border: none;\n  border-bottom: 1px solid var(--text-color);\n  background-color: transparent;\n  outline: none;\n}\n\nform input[type=submit] {\n  font-family: 'Roboto', 'serif';\n  font-size: 25px;\n  font-weight: bold;\n  border: none;\n  background-color: var(--header);\n  outline: none;\n  cursor: pointer;\n  color: white;\n  padding: 2.5px 10px;\n  border-radius: 15px;\n  transition: all 0.2s ease-in-out;\n}\n\nform input[type=submit]:hover {\n  transform: rotate(180deg);\n}","",{version:3,sources:["webpack://./src/styles/sidebar.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,YAAY;EACZ,wBAAwB;EACxB,gCAAgC;EAChC,gBAAgB;AAClB;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,eAAe;AACjB;;AAEA;;EAEE,eAAe;EACf,qBAAqB;EACrB,eAAe;EACf,kBAAkB;EAClB,oCAAoC;AACtC;;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,oBAAoB;EACpB,sBAAsB;EACtB,mCAAmC;AACrC;;AAEA;;EAEE,sCAAsC;AACxC;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA,SAAS;;AAET;EACE,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,0CAA0C;EAC1C,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,8BAA8B;EAC9B,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,+BAA+B;EAC/B,aAAa;EACb,eAAe;EACf,YAAY;EACZ,mBAAmB;EACnB,mBAAmB;EACnB,gCAAgC;AAClC;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:["#side-bar {\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0;\n  row-gap: 8px;\n  grid-area: 2 / 1 / 3 / 2;\n  background-color: var(--sidebar);\n  overflow: hidden;\n}\n\n#side-bar h1 {\n  margin: 10px 0;\n  text-align: center;\n  font-size: 40px;\n}\n\n#side-bar h2,\n#side-bar h3 {\n  font-size: 20px;\n  margin: 10px 0 0 35px;\n  cursor: pointer;\n  width: max-content;\n  border-bottom: 2px solid transparent;\n}\n\n#side-bar h2::before{\n  content: '';\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  align-items: center;\n  border-radius: 7.5px;\n  margin: 0 8px 1.55px 0;\n  background-color: var(--text-color);\n}\n\n#side-bar h3:hover,\n#side-bar h2:hover {\n  border-bottom: 2px solid var(--header);\n}\n\n#side-bar h3:hover {\n  color: var(--header);\n}\n\n.new-project {\n  font-size: 15px;\n  margin-right: 4px;\n}\n\n/* Form */\n\nform {\n  margin: 10px 0 0 35px;\n  width: max-content;\n}\n\nform input[type=text] {\n  font-family: 'Roboto', 'serif';\n  font-size: 20px;\n  font-weight: bold;\n  height: 30px;\n  width: 220px;\n  border: none;\n  border-bottom: 1px solid var(--text-color);\n  background-color: transparent;\n  outline: none;\n}\n\nform input[type=submit] {\n  font-family: 'Roboto', 'serif';\n  font-size: 25px;\n  font-weight: bold;\n  border: none;\n  background-color: var(--header);\n  outline: none;\n  cursor: pointer;\n  color: white;\n  padding: 2.5px 10px;\n  border-radius: 15px;\n  transition: all 0.2s ease-in-out;\n}\n\nform input[type=submit]:hover {\n  transform: rotate(180deg);\n}"],sourceRoot:""}]);const i=a},772:(n,e,r)=>{r.d(e,{Z:()=>u});var t=r(537),o=r.n(t),A=r(645),a=r.n(A),i=r(667),s=r.n(i),d=new URL(r(65),r.b),l=new URL(r(696),r.b),c=a()(o()),p=s()(d),f=s()(l);c.push([n.id,"*{\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  --background: #fff;\n  --header: #26825D;\n  --green: #26825D;\n  --text-color: #212b27;\n  --sidebar: #b6cfc5;\n}\n\nbody {\n  font-family: 'Roboto', 'serif';\n  background-color: var(--background);\n  display: grid;\n  grid-template: 60px 1fr / 310px 1fr;\n  height: 100vh;\n  width: 100vw;\n  color: var(--text-color);\n}\n\n.hidden {\n  display: none;\n}\n\n/* roboto-regular - latin */\n@font-face {\n  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: url("+p+") format('woff2'), /* Chrome 36+, Opera 23+, Firefox 39+ */\n       url("+f+") format('woff'); /* Chrome 5+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,mCAAmC;EACnC,aAAa;EACb,mCAAmC;EACnC,aAAa;EACb,YAAY;EACZ,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf;;AAEA,2BAA2B;AAC3B;EACE,kBAAkB,EAAE,sGAAsG;EAC1H,qBAAqB;EACrB,kBAAkB;EAClB,gBAAgB;EAChB;6DACiE,EAAE,gDAAgD;AACrH",sourcesContent:["*{\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  --background: #fff;\n  --header: #26825D;\n  --green: #26825D;\n  --text-color: #212b27;\n  --sidebar: #b6cfc5;\n}\n\nbody {\n  font-family: 'Roboto', 'serif';\n  background-color: var(--background);\n  display: grid;\n  grid-template: 60px 1fr / 310px 1fr;\n  height: 100vh;\n  width: 100vw;\n  color: var(--text-color);\n}\n\n.hidden {\n  display: none;\n}\n\n/* roboto-regular - latin */\n@font-face {\n  font-display: swap; /* Check https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display for other options. */\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: url('../fonts/roboto-v30-latin-regular.woff2') format('woff2'), /* Chrome 36+, Opera 23+, Firefox 39+ */\n       url('../fonts/roboto-v30-latin-regular.woff') format('woff'); /* Chrome 5+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}"],sourceRoot:""}]);const u=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&a[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),A="/*# ".concat(o," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var A={},a=[],i=0;i<n.length;i++){var s=n[i],d=t.base?s[0]+t.base:s[0],l=A[d]||0,c="".concat(d," ").concat(l);A[d]=l+1;var p=r(c),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var u=o(f,t);t.byIndex=i,e.splice(i,0,{identifier:c,updater:u,references:1})}a.push(c)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var A=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<A.length;a++){var i=r(A[a]);e[i].references--}for(var s=t(n,o),d=0;d<A.length;d++){var l=r(A[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var A=r.sourceMap;A&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},696:(n,e,r)=>{n.exports=r.p+"fonts/roboto-v30-latin-regular.woff"},65:(n,e,r)=>{n.exports=r.p+"fonts/roboto-v30-latin-regular.woff2"}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var A=e[t]={id:t,exports:{}};return n[t](A,A.exports,r),A.exports}r.m=n,r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),A=r(569),a=r.n(A),i=r(565),s=r.n(i),d=r(216),l=r.n(d),c=r(589),p=r.n(c),f=r(772),u={};u.styleTagTransform=p(),u.setAttributes=s(),u.insert=a().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=l(),e()(f.Z,u),f.Z&&f.Z.locals&&f.Z.locals;var E=r(497),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),e()(E.Z,C),E.Z&&E.Z.locals&&E.Z.locals;var g=r(756),B={};B.styleTagTransform=p(),B.setAttributes=s(),B.insert=a().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=l(),e()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;var m=r(584),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),e()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const b=[{title:"My First Project"}],x=document.getElementById("new-project"),v=document.getElementById("project-form");function y(){v.classList.contains("hidden")?(x.classList.add("hidden"),v.classList.remove("hidden")):(v.classList.add("hidden"),x.classList.remove("hidden"))}function w(){const n=document.getElementById("projects-list");n.textContent="",b.forEach((e=>{const r=document.createElement("h2");r.textContent=e.title,n.appendChild(r)}))}w();const k=document.getElementById("new-project"),j=document.getElementById("submit-project"),Z=document.getElementById("new-project-input");k.addEventListener("click",(()=>{y(),Z.focus()})),j.addEventListener("click",(n=>{n.preventDefault(),function(){const n={title:document.getElementById("new-project-input").value};b.push(n),w()}(),Z.value="",y()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,